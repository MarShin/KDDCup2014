ADA: seems to perform better only on categorical attributes
n_estimators = 100, 1000
lr = (1) 0.1


GB
max_depth = 2, 3
clf = GradientBoostingClassifier(n_estimators=100, learning_rate=1.0, max_depth=2, random_state=0)
clf = GradientBoostingClassifier(n_estimators=100, learning_rate=1.0, max_depth=3, random_state=0)


RF
max_leaf_nodes= int 30, 50

Calc Pearson coefficient


1_projects.csv: project info - train/test
2_essays.csv: project text - train/test
3_resources.csv: resource info - train/test

4_donations.csv: donation info - train
5_outcomes.csv: outcome info - train
  sampleSubmission.csv

[Tasks]
0: How many 'is_exciting' projects?
1: Arrange by projectsid
2: Appropriately fill empty fields / Or drop those fields?
3: Plot Data (Num of is_exciting projects over Time)
  - Find seasonality
  - Data before 2010 not useful (Some criteria not kept track before 2010)
  -
4: Make additional useful attributes
  - Essay Length
  -
5: Use different models (SVM, RandomTree, etc XGBoost)
6: Combine models

Handle Imbalance in classes:
-resampling
-penalized models (penalized-SVM, penalized-LDA)
-For Random Forest: Balanced Random Forest(BRF), Weighted random forest(WRF)

2010-04-14: No exciting projects prior to that. (Some factors not kept in record)

Criteria for 'is_exciting':

  fully_funded = t
  at_least_1_teacher_referred_donor = t
  message(great_chat) = t
  at_least_1_green_donation = t

  one or more of:
  three_or_more_non_teacher_referred_donors = t
  one_non_teacher_referred_donor_giving_100_plus = t
  donation_from_thoughtful_donor = t


  Data Shape: (getDataShape.py)
				row		col
  projects: 	664098	35
  essays:		664098	6
  resources:	3667217	9

  donations:	3097989	21
  outcomes:		619326	12

  Train set: 619326
  Test set: 44772

======================Outcomes===========================
Empty:

is_exciting 9.618850988589807 %
at_least_1_teacher_referred_donor 21.004122794390938 %
fully_funded 9.618850988589807 %
at_least_1_green_donation 21.004122794390938 %
great_chat 9.618850988589807 %
three_or_more_non_teacher_referred_donors 21.004122794390938 %
one_non_teacher_referred_donor_giving_100_plus 21.004122794390938 %
donation_from_thoughtful_donor 21.004122794390938 %
great_messages_proportion 23.552564017178668 %
teacher_referred_count 21.004122794390938 %
non_teacher_referred_count 21.004122794390938 %

======================Project===========================
Empty project fields percentage (x / 664098)*100 :

school_ncesid 6.4351948055859225 %
school_zip 0.0006023207418182256 %
school_metro 12.333721830211806 %
school_district 0.14275001581091948 %
school_county 0.002559863152727459 %
teacher_prefix 0.0006023207418182256 %
primary_focus_subject 0.0058726272327277 %
primary_focus_area 0.0058726272327277 %
secondary_focus_subject 31.304566494704094 %
secondary_focus_area 31.304566494704094 %
resource_type 0.006776108345455037 %
grade_level 0.0013552216690910076 %
fulfillment_labor_materials 5.282654066116748 %
students_reached 0.021984707076365236 %


======================Essays===========================


Essays:
empty field percentage:
title 0.002559863152727459 %
short_description 0.019876584480001444 %
need_statement 0.22165403298910702 %
essay 0.0004517405563636692 %


[Unigram Result]===================
title:
Score: 0.00596086777999
Confusion matrix:
[[580557   2059]
 [ 36594    116]]


short_description:
Score: 0.0178885877784
Confusion matrix:
[[576553   6063]
 [ 36324    386]]

 need_statement:
 Score: 0.0145946924701
 Confusion matrix:
 [[578132   4484]
  [ 36407    303]]

 essay:
 Score: 0.0266638354506
 Confusion matrix:
 [[572635   9981]
  [ 36079    631]]

[Bigram Result]====================
title:
Score: 0.00250561293097
Confusion matrix:
[[581907    709]
 [ 36663     47]]

short_description:
Score: 0.00123377694676
Confusion matrix:
[[582153    463]
 [ 36687     23]]

 need_statement:
 Score: 0.00134675330267
 Confusion matrix:
 [[582207    409]
  [ 36685     25]]

 essay:
 Score: 0.00064918577082
 Confusion matrix:
 [[582425    191]
  [ 36698     12]]
